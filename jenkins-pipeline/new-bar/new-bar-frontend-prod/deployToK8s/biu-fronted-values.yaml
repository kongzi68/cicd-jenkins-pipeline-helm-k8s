replicaCount: 1
hostNetwork: false
revisionHistoryLimit: 5
nameOverride: biu-fronted
namespacePrefix: 'NAMESPACEPREFIX'

image:
  # imgNameOrSvcName 是指定的镜像名称或者服务名称，
  imgNameOrSvcName: biu-fronted
  imgHarbor: IAmIPaddress:8765
  # harborProject 是harbor镜像仓库中创建的项目名称
  harborProject: rab
  # repository: IAmIPaddress:8765/rab/biu-fronted
  pullPolicy: IfNotPresent
  tag: "IMAGE_TAG"

imagePullSecrets:
  - name: harbor-inner
  - name: harbor-outer

securityContext: {}

## 设置service创建类型
#+ isIn 为 true，表示创建 ClusterIP 类型
#+ isOut 为 true，表示创建 NodePort 类型，fasle 表示不创建
service:
  isIn: false
  isOut: true
  ports: [80] # 容器需要启动的端口

resources: 
  limits:
    cpu: 350m
    memory: 1200Mi
  requests:
    cpu: 250m
    memory: 1000Mi

## 健康检查
isReadinessProbeEnabled: false
readinessProbe:
  tcpSocket:
    port: 80
  initialDelaySeconds: 10
  periodSeconds: 5

## 就绪检查
isLivenessProbeEnabled: false
livenessProbe:
  tcpSocket:
    port: 80
  initialDelaySeconds: 60
  periodSeconds: 30

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

autoscaling: {}
  # enabled: false
  # minReplicas: 1
  # maxReplicas: 100
  # targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

## nginx.conf
nginxConf:
  clientBodyTimeout: 60m
  clientHeaderTimeout: 60m
  proxyConnectTimeout: 3600s
  proxyReadTimeout: 60m
  proxySendTimeout: 60m

## 非 nginx.conf，是 web.conf 配置文件
nginxWebConf: |-
    server{
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name localhost;

        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;
        expires -1;

        location ^~ /chkstatus {
            alias /var/www/chkstatus/;
            access_log off;
            error_log /dev/null;
        }

        location / {
            iamusername /var/www/html;
            try_files $uri /index.html index.html;
        }

        location ~* /api\/ {
            proxy_pass API_ADDRS;
        }

        location /question {
            proxy_pass http://IAmIPaddress:30080/;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            chunked_transfer_encoding off;
            proxy_buffering off;
            proxy_cache off;
            rewrite "^/question/(.*)$" /api/$1 break;
        }

        location /socket {
            proxy_pass SOCKET_ADDRS;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location /assets {
            proxy_pass http://IAmIPaddress:4000/;
            rewrite "^/assets/(.*)$" /api/$1 break;
        } 
    }

