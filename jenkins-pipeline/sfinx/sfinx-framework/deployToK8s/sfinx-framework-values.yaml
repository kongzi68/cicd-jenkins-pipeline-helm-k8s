replicaCount: 1
hostNetwork: false
revisionHistoryLimit: 5
nameOverride: sfinx-framework
namespacePrefix: 'sfinx'

image:
  # imgNameOrSvcName 是指定的镜像名称或者服务名称，
  imgNameOrSvcName: sfinx-framework
  imgHarbor: IAmIPaddress:8765
  # harborProject 是harbor镜像仓库中创建的项目名称
  harborProject: sfinx
  # repository: IAmIPaddress:8765/sfinx/sfinx-framework
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets:
  - name: harbor-inner
  - name: harbor-outer

storage:
  storageEnable: false
  ## 配置文件目录
  isCreateConfigPVC: false
  isMountConfigPV: false
  configCapacity: ""
  configPVCNameInfix: 'config'
  configPVCMountPath: /opt/betack/config
  configStorageClassName: nfs-client-retain
  ## 二进制数据存储
  #+ 若 isMountDataPVType 的值为 pvc 同时又需要创建 dataPV 卷时，isCreateDataPVC 应设置为 true；
  #+ 否则其它情况一律设置为 false
  isCreateDataPVC: false
  # 指定挂载的卷类型
  #+ 若 isMountDataPVType 的值为 empty；此时 isCreateDataPVC 应设置为 false
  #+ isMountDataPVType 的值可选: empty pvc nil
  #++ pvc   表示使要 pvc 创建 pv 卷
  #++ empty 表示使用 emptyDir
  #++ nil   表示不挂载该卷
  isMountDataPVType: 'nil'
  #+ 设置为空的时候，默认创建 500Gi
  capacity: 50Gi
  # PVC名称加中缀，默认可设置为'data'即可
  dataPVCNameInfix: 'data'
  dataPVCMountPath: /opt/sfinx/data
  dataStorageClassName: nfs-client-retain
  ## 日志存储，挂载日志存储路径：/var/log
  isCreateLogPVC: false
  isMountLogPV: false
  logPVCMountPath: /var/log
  logStorageClassName: nfs-client-retain
  ## 有些服务，除了需要挂载api的data pv卷，还需要自己独立的pv卷
  isCreateAlonePVC: false
  isMountAlonePV: false
  #+ 设置为空的时候，默认创建 300Gi
  aloneCapacity: ""
  # alonePVC名称加中缀，默认可设置为'data-alone'即可
  aloneDataPVCNameInfix: 'data-alone'
  aloneDataPVCMountPath: /opt/sfinx/alone-data
  aloneDataStorageClassName: nfs-client-retain

## 设置service创建类型
#+ isIn 为 true，表示创建 ClusterIP 类型
#+ isOut 为 true，表示创建 NodePort 类型，fasle 表示不创建
service:
  isIn: false
  isOut: false
  ports: [] # 容器需要启动的端口

resources: {}
#  requests:
#    cpu: "1"
#    memory: "2048Mi"

## 通过secret注入环境变量
envFrom:
  enabled: false
  environmentVariable: {}
    # PA_EXTERNAL_BASE_URL: "http://pa-data-sync-in-dev-1"
    # MYSQL_HOST: "IAmIPaddress"
    # MYSQL_PORT: "36806"
    # MYSQL_DATABASE: "pa"
    # MYSQL_USERNAME: "iamusername"
    # MYSQL_PASSWORD: "iampassword"

# dnsNameservers:
#   - IAmIPaddress
#   - IAmIPaddress
dnsNameservers: []

podAnnotations: {}

## pod特权策略
podSecurityContext: {}
  # fsGroup: 2000

## 容器特权策略
securityContext:
  privileged: true

isReadinessProbeEnabled: false
readinessProbe: {}
  #tcpSocket:
  #  port: 8080
  #initialDelaySeconds: 5
  #periodSeconds: 10

isLivenessProbeEnabled: false
livenessProbe: {}
  #tcpSocket:
  #  port: 8080
  #initialDelaySeconds: 15
  #periodSeconds: 20

autoscaling: {}
  # enabled: false
  # minReplicas: 1
  # maxReplicas: 100
  # targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

## 用于直接指定command的项目
isCommand: true
command: 'pwd; ls -lh; /bin/bash run.sh'
